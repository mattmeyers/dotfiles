# Rebind the prefix to <C-Space>
unbind C-b
set -g prefix C-Space

# Bind config reloading
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

set -g mouse on
set -g history-limit 100000
set -sg escape-time 0

# Rebind pane splitting
unbind i
unbind o
unbind % # Split vertically
unbind '"' # Split horizontally
bind i split-window -h -c "#{pane_current_path}"
bind o split-window -v -c "#{pane_current_path}"

# Pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Window management
unbind n
unbind w
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"
set -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi
bind -n M-j previous-window
bind -n M-k next-window

# Session management
unbind e
bind e new-window tsm

# Copy mode
unbind -T copy-mode-vi Space;
unbind -T copy-mode-vi Enter;
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Vim interoperability
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
